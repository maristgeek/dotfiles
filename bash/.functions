#!/usr/bin/env bash

function epoch2nsca() {
  date -d @"$1" "+%d/%b/%Y:%T"
}

function epoch2human() {
  date -d @"$1"
}

function epoch2iso8601() {
  date -d @"$1" -Iseconds
}

# List all files, long format, colorized, permissions in octal
function la() {
  # shellcheck disable=SC2012
  ls -l  "$@" | awk '
    {
      k=0;
      for (i=0;i<=8;i++)
        k+=((substr($1,i+2,1)~/[rwx]/) *2^(8-i));
      if (k)
        printf("%0o ",k);
      printf(" %9s  %3s %2s %5s  %6s  %s %s %s\n", $3, $6, $7, $8, $5, $9,$10, $11);
    }'
}

# cd into whatever is the forefront Finder window.
function cdf() {  # short for cdfinder
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')" || return
}

# whois a domain or a URL
function whois() {
  local domain
  domain=$(echo "$1" | awk -F/ '{print $3}') # get domain from URL
  if [ -z "$domain" ] ; then
    domain=$1
  fi
  echo "Getting whois record for: $domain â€¦"

  # avoid recursion
          # this is the best whois server
                          # strip extra fluff
  /usr/bin/whois -h whois.internic.net "$domain" | sed '/NOTICE:/q'
}

function localip() {
  function _localip() { echo "ðŸ“¶  "$(ipconfig getifaddr "$1"); }
  export -f _localip
  local -r purple='\x1B\[35m' reset='\x1B\[m'
  networksetup -listallhardwareports | \
    sed -r "s/Hardware Port: (.*)/${purple}\1${reset}/g" | \
    sed -r "s/Device: (en.*)$/_localip \1/e" | \
    sed -r "s/Ethernet Address:/ðŸ“˜ /g" | \
    sed -r "s/(VLAN Configurations)|==*//g"
}

# update git repo with upstream
function git_upstream_sync() {
  git fetch upstream
  git fetch upstream --tags
  git merge upstream/master
  git push origin master --tags
}

# git commit browser. needs fzf
function log() {
  git log --graph --color=always \
    --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --toggle-sort=\` \
    --bind "ctrl-m:execute:
            echo '{}' | grep -o '[a-f0-9]\{7\}' | head -1 |
            xargs -I % sh -c 'git show --color=always % | less -R'"
}

function white-board-cleaner() {
  local path input input_no_ext output
  path=$(dirname "$1")
  input=$(basename "$1")
  input_no_ext=${input%.*}
  output=${2:-$path/cleaned-$input_no_ext.png}
  echo "${output}"
  convert "${path}/${input}" \
    -morphology Convolve DoG:15,100,0 \
    -negate \
    -normalize \
    -blur 0x1 \
    -channel RBG \
    -level 60%,91%,0.1 "${output}";
  echo "${output}"
}
